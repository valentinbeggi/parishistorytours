---
const reviews = [
	{ 
		name: "Anonymous", 
		platform: "Freetour.com", 
		rating: 5, 
		text: "Best tour ever organized!",
		details: "Clement is the best tour guide I have ever encountered, and I have traveled extensively for many years. He stands out for his enthusiasm and passion for his subject. He is clearly immersed in his topic, in this case French resistance during World War II. He provides a wealth of information, tells fascinating stories, and answers all questions with good humor and competence. He is a real talent, well educated, enthusiastic and humble. Join one of his tours if you get the chance!",
		date: "3rd of August 2025"
	},
	{ 
		name: "Anonymous", 
		platform: "Freetour.com", 
		rating: 5, 
		text: "Engaging and immersive - a must do!",
		details: "Our tour with Clement was extraordinary! We loved every minute and could have spent hours more on his circuit. Every stop was captivating and immersive. He can answer any question about WWII Paris and brings the history to life with incredible storytelling and knowledge.",
		date: "5th of July 2025"
	},
	{ 
		name: "Anonymous", 
		platform: "Freetour.com", 
		rating: 5, 
		text: "Fantastic Tour",
		details: "We did three free tours and this one was by far the best. A must for anyone interested in history. Clement was an exceptional guide with incredible knowledge and passion for the subject.",
		date: "30th of June 2025"
	},
	{ 
		name: "Anonymous", 
		platform: "Freetour.com", 
		rating: 5, 
		text: "Best tour in Paris",
		details: "Clement had incredible knowledge and passion for the tour. It started with a brief on the topic and continued with many stops filled with information. Amazing that this experience is free, the tours are perfect.",
		date: "29th of June 2025"
	}
];
---

{/* Section Reviews */}
<div class="mb-16">
	<h2 class="text-3xl md:text-4xl font-bold text-center mb-4 text-gray-800">Reviews</h2>
	<p class="text-center text-gray-600 mb-12 text-lg">What visitors say about our tours</p>
	
	{/* Carrousel de reviews */}
	<div class="relative max-w-4xl mx-auto overflow-hidden">
		<div class="flex transition-transform duration-500 ease-in-out" id="review-carousel">
			{reviews.map((review, index) => (
				<div class="min-w-full px-4">
					<div class="bg-white rounded-xl shadow-lg p-8 mx-auto max-w-3xl border border-gray-100 min-h-96 flex flex-col">
						{/* Header avec étoiles et date */}
						<div class="flex items-center justify-between mb-4 gap-4">
							<div class="flex text-yellow-400">
								{Array.from({ length: 5 }, (_, i) => (
									<span>
										<svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
											<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
										</svg>
									</span>
								))}
							</div>
							<span class="text-sm text-gray-500">{review.date}</span>
						</div>
						
						{/* Titre du commentaire */}
						<h3 class="text-xl font-bold text-gray-800 mb-4 leading-tight">"{review.text}"</h3>
						
						{/* Contenu détaillé avec affichage limité */}
						<div class="flex-1 flex flex-col overflow-hidden">
							<div class={`text-gray-700 leading-relaxed mb-4 flex-1 review-text-${index} break-words`}>
								<span class={`review-preview-${index}`}>
									{review.details.length > 150 ? review.details.substring(0, 150) + "..." : review.details}
								</span>
								<span class={`review-full-${index} hidden`}>
									{review.details}
								</span>
							</div>
							{review.details.length > 150 && (
								<button 
									class={`text-blue-500 text-sm font-medium hover:text-blue-600 transition self-start mb-4 show-more-${index} cursor-pointer flex-shrink-0`}
									onclick={`toggleReview(${index})`}
								>
									Show more
								</button>
							)}
						</div>
						
						{/* Footer avec plateforme */}
						<div class="border-t border-gray-100 pt-4 mt-auto flex-shrink-0">
							<div class="flex items-center justify-between">
								<div class="flex items-center gap-2">
									<img 
										src="/logos/Freetour_logo.png"
										alt="Freetour logo" 
										class="w-5 h-5 object-contain"
									/>
									<span class="text-sm font-medium text-gray-600">{review.platform}</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			))}
		</div>
		
		{/* Boutons de navigation */}
		<button id="prev-review" class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-lg hover:bg-gray-50 transition cursor-pointer">
			<svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
			</svg>
		</button>
		<button id="next-review" class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-lg hover:bg-gray-50 transition cursor-pointer">
			<svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
			</svg>
		</button>
		
		{/* Indicateurs */}
		<div class="flex justify-center mt-6 space-x-2" id="review-indicators">
			{Array.from({ length: 4 }, (_, i) => (
				<button class={`w-3 h-3 rounded-full transition cursor-pointer ${i === 0 ? 'bg-gray-800' : 'bg-gray-300'}`} data-index={i}></button>
			))}
		</div>
	</div>
	
	{/* Liens vers les plateformes */}
	<div class="flex flex-col md:flex-row justify-center items-center gap-4 md:gap-8 mt-8">
		<a href="https://www.freetour.com/paris/second-world-war-tour-in-paris-fall-resistance-liberation" target="_blank" class="flex items-center gap-2 text-gray-700 hover:text-gray-900 underline transition text-sm text-center">
			<img 
				src="/logos/Freetour_logo.png"
				alt="Freetour logo" 
				class="w-6 h-6 object-contain"
			/>
			<span>See more reviews on Freetour.com</span>
		</a>
		<span class="text-gray-400 hidden md:inline">|</span>
		<a href="https://maps.app.goo.gl/1ZmS5861XDPsM1Dk7" target="_blank" class="flex items-center gap-2 text-gray-700 hover:text-gray-900 underline transition text-sm text-center">
			<img 
				src={"/logos/Google__logo.webp"}
				alt="Google logo" 
				class="w-6 h-6 object-contain"
			/>
			<span>Find us on Google Maps</span>
		</a>
	</div>
</div>

<script>
	// Script pour le carrousel de reviews et fonction toggleReview
	declare global {
		interface Window {
			toggleReview: (index: number) => void;
		}
	}

	function toggleReview(index: number) {
		const preview = document.querySelector(`.review-preview-${index}`);
		const full = document.querySelector(`.review-full-${index}`);
		const button = document.querySelector(`.show-more-${index}`);
		
		if (!preview || !full || !button) {
			return;
		}

		if (preview.classList.contains('hidden')) {
			preview.classList.remove('hidden');
			full.classList.add('hidden');
			button.textContent = 'Show more';
		} else {
			preview.classList.add('hidden');
			full.classList.remove('hidden');
			button.textContent = 'Show less';
		}
	}

	window.toggleReview = toggleReview;

	let currentReviewIndex = 0;
	const totalReviews = 4;
	const carousel = document.getElementById('review-carousel');
	const indicators = document.querySelectorAll('#review-indicators button');
	const prevBtn = document.getElementById('prev-review');
	const nextBtn = document.getElementById('next-review');

	function updateCarousel() {
		const offset = -currentReviewIndex * 100;
		if (carousel) {
			carousel.style.transform = `translateX(${offset}%)`;
		}
		
		indicators.forEach((indicator, index) => {
			indicator.classList.toggle('bg-gray-800', index === currentReviewIndex);
			indicator.classList.toggle('bg-gray-300', index !== currentReviewIndex);
		});
	}

	function nextReview() {
		currentReviewIndex = (currentReviewIndex + 1) % totalReviews;
		updateCarousel();
	}

	function prevReview() {
		currentReviewIndex = (currentReviewIndex - 1 + totalReviews) % totalReviews;
		updateCarousel();
	}

	if (nextBtn) {
		nextBtn.addEventListener('click', nextReview);
	}
	if (prevBtn) {
		prevBtn.addEventListener('click', prevReview);
	}

	indicators.forEach((indicator, index) => {
		indicator.addEventListener('click', () => {
			currentReviewIndex = index;
			updateCarousel();
		});
	});

	// Touch/Swipe support for mobile
	let touchStartX = 0;
	let touchStartY = 0;
	let touchEndX = 0;
	let touchEndY = 0;
	const minSwipeDistance = 50;

	if (carousel) {
		carousel.addEventListener('touchstart', (e) => {
			touchStartX = e.changedTouches[0].screenX;
			touchStartY = e.changedTouches[0].screenY;
		}, { passive: true });

		carousel.addEventListener('touchend', (e) => {
			touchEndX = e.changedTouches[0].screenX;
			touchEndY = e.changedTouches[0].screenY;
			handleSwipe();
		}, { passive: true });
	}

	function handleSwipe() {
		const deltaX = touchEndX - touchStartX;
		const deltaY = touchEndY - touchStartY;
		
		// Vérifier que c'est un swipe horizontal (et non vertical)
		if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > minSwipeDistance) {
			if (deltaX > 0) {
				// Swipe vers la droite - review précédente
				prevReview();
			} else {
				// Swipe vers la gauche - review suivante
				nextReview();
			}
		}
	}

	setInterval(nextReview, 5000);
</script>
