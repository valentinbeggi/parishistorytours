---
import BaseLayout from "../layouts/BaseLayout.astro";
import Welcome from "../components/Welcome.astro";
import ToursAvailable from "../components/ToursAvailable.astro";
import Reviews from "../components/Reviews.astro";
import BookTour from "../components/BookTour.astro";
import "../styles/global.css";

import { Picture } from "astro:assets";

import guidePhoto     from "../images/guide-photo.webp";
import pantheon       from "../images/pantheon_de_Paris.webp";
import placeVendome   from "../images/place_vendome_paris.webp";
---

<meta name="description" content="Explore Paris through private WWII history tours. Discover iconic places with expert guides. Book your historical Paris tour now.">


<BaseLayout title="Paris History Tours" description="Discover Paris differently with immersive WWII walking tours across the Left Bank and Right Bank.">
	<!-- Bannière de navigation fixe pour desktop -->
	<nav class="hidden md:fixed top-0 left-0 w-full bg-white/95 border-b border-gray-200 z-50 shadow-sm">
		<div class="max-w-4xl mx-auto flex items-center justify-center gap-8 py-3">
			<a href="/tours/left-bank" class="text-gray-800 font-semibold hover:text-gray-600 transition">Left-Bank Tour</a>
			<a href="/tours/right-bank" class="text-gray-800 font-semibold hover:text-gray-600 transition">Right-Bank Tour</a>
			<a href="/" class="text-gray-800 font-semibold hover:text-gray-600 transition">Accueil</a>
		</div>
	</nav>

	<!-- Menu mobile hamburger -->
	<div class="md:hidden fixed top-4 right-4 z-50">
		<button id="mobile-menu-btn" class="bg-white/90 backdrop-blur-sm border border-gray-200 rounded-lg p-3 shadow-lg hover:bg-white transition-all duration-200">
			<svg id="hamburger-icon" class="w-6 h-6 text-gray-800 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
			</svg>
			<svg id="close-icon" class="hidden w-6 h-6 text-gray-800 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
			</svg>
		</button>

		<!-- Menu déroulant mobile -->
		<div id="mobile-menu" class="hidden absolute top-14 right-0 bg-white border border-gray-200 rounded-lg shadow-xl py-2 min-w-48 opacity-0 transition-all duration-200 transform scale-95">
			<a href="#about" class="mobile-menu-item block px-4 py-3 text-gray-800 hover:bg-gray-50 border-b border-gray-100 font-medium">Présentation</a>
			<a href="#tours" class="mobile-menu-item block px-4 py-3 text-gray-800 hover:bg-gray-50 border-b border-gray-100 font-medium">Tours Available</a>
			<a href="#reviews" class="mobile-menu-item block px-4 py-3 text-gray-800 hover:bg-gray-50 border-b border-gray-100 font-medium">Reviews</a>
			<a href="#book-tour" class="mobile-menu-item block px-4 py-3 text-gray-800 hover:bg-gray-50 border-b border-gray-100 font-medium">Book your Tour</a>
			<a href="#gallery" class="mobile-menu-item block px-4 py-3 text-gray-800 hover:bg-gray-50 font-medium">Gallery</a>
		</div>
	</div>

	<!-- Hero section -->
	<section id="about" class="py-8 md:py-24 px-2 max-w-full text-lg leading-8 bg-[#ebebef] min-h-screen" style="font-family: 'Montserrat', Inter, system-ui, sans-serif;">
		{/* Titre principal et sous-titre */}
		<div class="max-w-4xl mx-auto flex flex-col items-center justify-center mb-0">
			<h1 class="text-4xl md:text-6xl font-bold text-center text-gray-800 m-0 p-0 mb-4">
				Discover Paris differently
			</h1>
			{/* Séparateur fin entre les titres */}
			<div class="w-16 h-px bg-gray-400 mb-4"></div>
			<h2 class="text-xl md:text-2xl font-medium text-center text-gray-600 m-0 p-0">
				Immersive visits about WW2 History in Paris
			</h2>
			<p class="mt-4 text-center text-gray-700">
				Our mission is to help you discover Paris differently through expert-guided WWII walking tours across the Left Bank and Right Bank.
			</p>
		</div>
		{/* Partie photo et contenu sur fond clair */}
		<div class="flex justify-center mb-4 max-w-4xl mx-auto">
			<Picture
			src={guidePhoto}
			alt="Guide – Paris History Tours"
			widths={[320,640,960,1280]}
			sizes="(max-width:768px) 90vw, 480px"
			formats={["avif","webp"]} 
			loading="lazy"
			decoding="async"
			quality={80}
			class="rounded-xl shadow-lg max-w-full h-auto mt-8 mb-8"
		/>
		</div>
		
		{/* Séparateur ligne */}
		<div class="flex justify-center mb-8">
			<div class="w-32 h-1 bg-gray-400 rounded-full"></div>
		</div>

		<Welcome />
		<ToursAvailable />
		<Reviews />
		<BookTour />
	</section>
	
	{/* Galerie des photos */}
	<section id="gallery" class="py-16 bg-white">
		<div class="max-w-6xl mx-auto px-4">
			<h2 class="text-3xl md:text-4xl font-bold text-center mb-4 text-gray-800">Gallery</h2>
			<p class="text-center text-gray-600 mb-12 text-lg">Discover the historical sites we visit</p>
			
			<div class="relative max-w-4xl mx-auto">
				{/* Conteneur du carrousel */}
				<div class="overflow-hidden rounded-xl shadow-lg">
					<div class="flex transition-transform duration-500 ease-in-out" id="gallery-carousel">
						{/* Panthéon */}
						<div class="min-w-full">
							<div class="relative">
								<Picture
									src={pantheon}
									alt="Panthéon de Paris – Memorial to Resistance heroes"
									widths={[640,768,1024,1440]}
									sizes="100vw"
									formats={["avif","webp"]}
									loading="lazy"
									decoding="async"
									quality={75}
									class="w-full h-64 md:h-96 object-cover"
								/>
								<div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-6">
									<h3 class="text-white text-xl md:text-2xl font-bold mb-2">Panthéon</h3>
									<p class="text-white/90 text-sm md:text-base">Memorial to the heroes of the French Resistance</p>
								</div>
							</div>
						</div>
						
						{/* Place Vendôme */}
						<div class="min-w-full">
							<div class="relative">
								<Picture
									src={placeVendome}
									alt="Place Vendôme – Wartime Paris"
									widths={[640,768,1024,1440]}
									sizes="100vw"
									formats={["avif","webp"]}
									loading="lazy"
									decoding="async"
									quality={75}
									class="w-full h-64 md:h-96 object-cover"
								/>
								<div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-6">
									<h3 class="text-white text-xl md:text-2xl font-bold mb-2">Place Vendôme</h3>
									<p class="text-white/90 text-sm md:text-base">Witness to the German occupation of Paris</p>
								</div>
							</div>
						</div>
						
						{/* Photo du guide */}
						<div class="min-w-full">
							<div class="relative">
								<Picture
								src={guidePhoto}
								alt="Clément – Your expert guide"
								widths={[640,768,1024,1440]}
								sizes="100vw"
								formats={["avif","webp"]}
								loading="lazy"
								decoding="async"
								quality={75}
								class="w-full h-64 md:h-96 object-cover"
							/>
								<div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-6">
									<h3 class="text-white text-xl md:text-2xl font-bold mb-2">Meet Clément</h3>
									<p class="text-white/90 text-sm md:text-base">Your passionate historian and expert guide</p>
								</div>
							</div>
						</div>
					</div>
				</div>
				
				{/* Boutons de navigation */}
				<button id="prev-gallery" class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/80 hover:bg-white rounded-full p-3 shadow-lg transition-all duration-200">
					<svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
					</svg>
				</button>
				<button id="next-gallery" class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/80 hover:bg-white rounded-full p-3 shadow-lg transition-all duration-200">
					<svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
					</svg>
				</button>
				
				{/* Indicateurs */}
				<div class="flex justify-center mt-6 space-x-2" id="gallery-indicators">
					<button class="w-3 h-3 rounded-full bg-gray-800 transition-all duration-200" data-index="0"></button>
					<button class="w-3 h-3 rounded-full bg-gray-300 transition-all duration-200" data-index="1"></button>
					<button class="w-3 h-3 rounded-full bg-gray-300 transition-all duration-200" data-index="2"></button>
				</div>
			</div>
		</div>
	</section>

	<!-- Footer -->
	<footer class="bg-gray-900 text-white py-12">
    <div class="max-w-6xl mx-auto px-4">
      <div class="grid md:grid-cols-3 gap-8 mb-8">
        <!-- About -->
        <div>
          <h3 class="text-xl font-bold mb-4">Paris History Tours</h3>
          <p class="text-gray-300 mb-4">
            Discover the hidden stories of Paris during World War II through our expert-guided walking tours.
          </p>
          <p class="text-gray-400 text-sm">
            By Clément Daguet
          </p>
        </div>

        <!-- Quick Links -->
        <div>
          <h4 class="text-lg font-semibold mb-4">Tours</h4>
          <ul class="space-y-2">
            <li><a href="/" class="text-gray-300 hover:text-white transition-colors">Home</a></li>
            <li><a href="/tours/left-bank" class="text-gray-300 hover:text-white transition-colors">Left Bank Tour</a></li>
            <li><a href="/tours/right-bank" class="text-gray-300 hover:text-white transition-colors">Right Bank Tour</a></li>
            <li><a href="/key-figures" class="text-gray-300 hover:text-white transition-colors">Key Figures</a></li>
          </ul>
        </div>

        <!-- Contact -->
        <div>
          <h4 class="text-lg font-semibold mb-4">Contact</h4>
          <div class="space-y-3">
            <a href="https://wa.me/33620622480" target="_blank" class="flex items-center gap-3 text-gray-300 hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.787"/>
              </svg>
              WhatsApp
            </a>
            <a href="mailto:clemdaguetschott@gmail.com" class="flex items-center gap-3 text-gray-300 hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.89 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
              </svg>
              Email
            </a>
            <a href="https://maps.app.goo.gl/AGYuzh8jHA9KXv9h8" target="_blank" class="flex items-center gap-3 text-gray-300 hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
              </svg>
              Google Maps
            </a>
          </div>
        </div>
      </div>

      <!-- Bottom bar -->
      <div class="border-t border-gray-800 pt-8 text-center text-gray-400">
        <p>&copy; {new Date().getFullYear()} Paris History Tours. All rights reserved.</p>
      </div>
    </div>
  </footer>
</BaseLayout>

<script>
		// Ajout de la déclaration pour étendre l'interface Window
		declare global {
			interface Window {
				toggleReview: (index: number) => void;
			}
		}

		// Fonction pour afficher/masquer le contenu complet des reviews
		function toggleReview(index: number) {
			const preview = document.querySelector(`.review-preview-${index}`);
			const full = document.querySelector(`.review-full-${index}`);
			const button = document.querySelector(`.show-more-${index}`);
			
			if (!preview || !full || !button) {
				return;
			}

			if (preview.classList.contains('hidden')) {
				// Afficher le preview, masquer le complet
				preview.classList.remove('hidden');
				full.classList.add('hidden');
				button.textContent = 'Show more';
			} else {
				// Afficher le complet, masquer le preview
				preview.classList.add('hidden');
				full.classList.remove('hidden');
				button.textContent = 'Show less';
			}
		}

		// Rendre la fonction globale pour qu'elle soit accessible depuis l'onclick
		window.toggleReview = toggleReview;

		// Script pour le carrousel de reviews
		let currentReviewIndex = 0;
		const totalReviews = 4;
		const carousel = document.getElementById('review-carousel');
		const indicators = document.querySelectorAll('#review-indicators button');
		const prevBtn = document.getElementById('prev-review');
		const nextBtn = document.getElementById('next-review');

		function updateCarousel() {
			const offset = -currentReviewIndex * 100;
			if (carousel) {
				carousel.style.transform = `translateX(${offset}%)`;
			}
			
			// Mettre à jour les indicateurs
			indicators.forEach((indicator, index) => {
				indicator.classList.toggle('bg-gray-800', index === currentReviewIndex);
				indicator.classList.toggle('bg-gray-300', index !== currentReviewIndex);
			});
		}

		function nextReview() {
			currentReviewIndex = (currentReviewIndex + 1) % totalReviews;
			updateCarousel();
		}

		function prevReview() {
			currentReviewIndex = (currentReviewIndex - 1 + totalReviews) % totalReviews;
			updateCarousel();
		}

		// Event listeners
		if (nextBtn) {
			nextBtn.addEventListener('click', nextReview);
		}
		if (prevBtn) {
			prevBtn.addEventListener('click', prevReview);
		}

		// Indicateurs cliquables
		indicators.forEach((indicator, index) => {
			indicator.addEventListener('click', () => {
				currentReviewIndex = index;
				updateCarousel();
			});
		});

		// Auto-défilement
		setInterval(nextReview, 5000);

		// Script pour la sélection de tour
		const tourOptions = document.querySelectorAll('.tour-option');
		const selectedTourDiv = document.getElementById('selected-tour');
		const changeTourBtn = document.getElementById('change-tour');
		const stepParticipants = document.getElementById('step-participants');

		tourOptions.forEach(option => {
			option.addEventListener('click', () => {
				// Masquer les autres options avec animation
				tourOptions.forEach(opt => {
					if (opt !== option) {
						(opt as HTMLElement).style.opacity = '0';
						(opt as HTMLElement).style.transform = 'scale(0.8)';
						setTimeout(() => {
							(opt as HTMLElement).style.display = 'none';
						}, 300);
					}
				});
				
				// Animer l'option sélectionnée avec plus de douceur
				setTimeout(() => {
					option.classList.remove('md:w-1/2');
					option.classList.add('max-w-sm', 'mx-auto');
					(option as HTMLElement).style.transition = 'transform 0.6s ease-out';
					(option as HTMLElement).style.transform = 'scale(1.05)';
					
					setTimeout(() => {
						(option as HTMLElement).style.transform = 'scale(1)';
					}, 400);
				}, 300);
				
				// Afficher le bouton de retour avec animation
				setTimeout(() => {
					if (selectedTourDiv) {
						selectedTourDiv.classList.remove('hidden');
						selectedTourDiv.style.opacity = '0';
						selectedTourDiv.style.transition = 'opacity 0.4s ease-in';
						setTimeout(() => {
							selectedTourDiv.style.opacity = '1';
						}, 50);
					}
				}, 700);
				
				// Afficher le step 2 après la sélection du tour
				setTimeout(() => {
					if (stepParticipants) {
						stepParticipants.classList.remove('hidden');
						stepParticipants.style.opacity = '0';
						stepParticipants.style.transition = 'opacity 0.5s ease-in';
						setTimeout(() => {
							stepParticipants.style.opacity = '1';
						}, 50);
					}
				}, 800);
			});
		});

		// Bouton pour revenir en arrière
		if (changeTourBtn) {
			changeTourBtn.addEventListener('click', () => {
				// Masquer le bouton de retour
				if (selectedTourDiv) {
					selectedTourDiv.style.opacity = '0';
					setTimeout(() => {
						selectedTourDiv.classList.add('hidden');
					}, 200);
				}
				
				// Réafficher toutes les options avec animation
				tourOptions.forEach(opt => {
					(opt as HTMLElement).style.display = 'block';
					(opt as HTMLElement).style.opacity = '0';
					(opt as HTMLElement).style.transform = 'scale(0.8)';
					opt.classList.add('md:w-1/2');
					opt.classList.remove('max-w-sm', 'mx-auto');
					
					setTimeout(() => {
						(opt as HTMLElement).style.opacity = '1';
						(opt as HTMLElement).style.transform = 'scale(1)';
					}, 100);
				});
				
				// Masquer le step 2
				if (stepParticipants) {
					stepParticipants.style.opacity = '0';
					setTimeout(() => {
						stepParticipants.classList.add('hidden');
					}, 200);
				}
			});
		}

		// Script pour la sélection du nombre de participants
		const participantOptions = document.querySelectorAll('.participant-option');
		const moreParticipantsSelect = document.getElementById('more-participants') as HTMLSelectElement;

		function selectParticipantCount(count: number) {
			// Réinitialiser tous les styles
			participantOptions.forEach(opt => {
				opt.classList.remove('border-blue-500', 'bg-blue-600', 'text-white');
				opt.classList.add('border-gray-200', 'opacity-50');
				const numberDiv = opt.querySelector('div:first-child');
				const textDiv = opt.querySelector('div:last-child');
				if (numberDiv) numberDiv.classList.remove('text-white');
				if (textDiv) textDiv.classList.remove('text-white');
			});

			if (moreParticipantsSelect) {
				moreParticipantsSelect.value = '';
			}
		}

		// Event listeners pour les boutons 1-4
		participantOptions.forEach(option => {
			option.addEventListener('click', () => {
				const count = parseInt((option as HTMLElement).dataset.count || '0');
				
				// Réinitialiser d'abord
				selectParticipantCount(count);
				
				// Mettre en surbrillance l'option sélectionnée
				option.classList.remove('border-gray-200', 'opacity-50');
				option.classList.add('border-blue-500', 'bg-blue-600', 'text-white');
				
				const numberDiv = option.querySelector('div:first-child');
				const textDiv = option.querySelector('div:last-child');
				if (numberDiv) numberDiv.classList.add('text-white');
				if (textDiv) textDiv.classList.add('text-white');
			});
		});

		// Event listener pour le select "5 or more"
		if (moreParticipantsSelect) {
			moreParticipantsSelect.addEventListener('change', () => {
				const count = parseInt(moreParticipantsSelect.value);
				if (count) {
					// Réinitialiser les boutons 1-4
					participantOptions.forEach(opt => {
						opt.classList.remove('border-blue-500', 'bg-blue-600', 'text-white');
						opt.classList.add('border-gray-200', 'opacity-50');
						const numberDiv = opt.querySelector('div:first-child');
						const textDiv = opt.querySelector('div:last-child');
						if (numberDiv) numberDiv.classList.remove('text-white');
						if (textDiv) textDiv.classList.remove('text-white');
					});
				}
			});
		}

		// Gallery carousel functionality
		let currentGalleryIndex = 0;
		const totalImages = 3;
		const galleryCarousel = document.getElementById('gallery-carousel');
		const galleryIndicators = document.querySelectorAll('#gallery-indicators button');
		const prevGalleryBtn = document.getElementById('prev-gallery');
		const nextGalleryBtn = document.getElementById('next-gallery');

		function updateGalleryCarousel() {
			const offset = -currentGalleryIndex * 100;
			if (galleryCarousel) {
				galleryCarousel.style.transform = `translateX(${offset}%)`;
			}
			
			galleryIndicators.forEach((indicator, index) => {
				indicator.classList.toggle('bg-gray-800', index === currentGalleryIndex);
				indicator.classList.toggle('bg-gray-300', index !== currentGalleryIndex);
			});
		}

		function nextGalleryImage() {
			currentGalleryIndex = (currentGalleryIndex + 1) % totalImages;
			updateGalleryCarousel();
		}

		function prevGalleryImage() {
			currentGalleryIndex = (currentGalleryIndex - 1 + totalImages) % totalImages;
			updateGalleryCarousel();
		}

		if (nextGalleryBtn) {
			nextGalleryBtn.addEventListener('click', nextGalleryImage);
		}
		if (prevGalleryBtn) {
			prevGalleryBtn.addEventListener('click', prevGalleryImage);
		}

		galleryIndicators.forEach((indicator, index) => {
			indicator.addEventListener('click', () => {
				currentGalleryIndex = index;
				updateGalleryCarousel();
			});
		});

		// Auto-play gallery
		setInterval(nextGalleryImage, 4000);

		// Touch/Swipe support for mobile
		let galleryTouchStartX = 0;
		let galleryTouchStartY = 0;
		let galleryTouchEndX = 0;
		let galleryTouchEndY = 0;
		const minSwipeDistance = 50;

		if (galleryCarousel) {
			galleryCarousel.addEventListener('touchstart', (e) => {
				galleryTouchStartX = e.changedTouches[0].screenX;
				galleryTouchStartY = e.changedTouches[0].screenY;
			}, { passive: true });

			galleryCarousel.addEventListener('touchend', (e) => {
				galleryTouchEndX = e.changedTouches[0].screenX;
				galleryTouchEndY = e.changedTouches[0].screenY;
				handleGallerySwipe();
			}, { passive: true });
		}

		function handleGallerySwipe() {
			const deltaX = galleryTouchEndX - galleryTouchStartX;
			const deltaY = galleryTouchEndY - galleryTouchStartY;
			
			if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > minSwipeDistance) {
				if (deltaX > 0) {
					prevGalleryImage();
				} else {
					nextGalleryImage();
				}
			}
		}

		// Menu mobile functionality
		const mobileMenuBtn = document.getElementById('mobile-menu-btn');
		const mobileMenu = document.getElementById('mobile-menu');
		const hamburgerIcon = document.getElementById('hamburger-icon');
		const closeIcon = document.getElementById('close-icon');
		const mobileMenuItems = document.querySelectorAll('.mobile-menu-item');

		let isMenuOpen = false;

		function toggleMobileMenu() {
			isMenuOpen = !isMenuOpen;
			
			if (isMenuOpen) {
				// Ouvrir le menu
				mobileMenu?.classList.remove('hidden');
				setTimeout(() => {
					mobileMenu?.classList.remove('opacity-0', 'scale-95');
					mobileMenu?.classList.add('opacity-100', 'scale-100');
				}, 10);
				
				// Changer l'icône
				hamburgerIcon?.classList.add('hidden');
				closeIcon?.classList.remove('hidden');
			} else {
				// Fermer le menu
				mobileMenu?.classList.remove('opacity-100', 'scale-100');
				mobileMenu?.classList.add('opacity-0', 'scale-95');
				setTimeout(() => {
					mobileMenu?.classList.add('hidden');
				}, 200);
				
				// Changer l'icône
				hamburgerIcon?.classList.remove('hidden');
				closeIcon?.classList.add('hidden');
			}
		}

		// Event listener pour le bouton menu
		mobileMenuBtn?.addEventListener('click', toggleMobileMenu);

		// Event listeners pour les éléments du menu
		mobileMenuItems.forEach(item => {
			item.addEventListener('click', (e) => {
				e.preventDefault();
				const targetId = item.getAttribute('href')?.substring(1);
				const targetElement = document.getElementById(targetId || '');
				
				if (targetElement) {
					// Scroll smooth vers la section
					targetElement.scrollIntoView({ 
						behavior: 'smooth',
						block: 'start'
					});
					
					// Fermer le menu après navigation
					setTimeout(() => {
						toggleMobileMenu();
					}, 300);
				}
			});
		});

				// Fermer le menu si on clique ailleurs
				document.addEventListener('click', (e) => {
					if (
						isMenuOpen &&
						mobileMenu &&
						!mobileMenu.contains(e.target as Node) &&
						mobileMenuBtn &&
						!mobileMenuBtn.contains(e.target as Node)
					) {
						toggleMobileMenu();
					}
				});
		</script>

<script>
  // Debug: vérifier l’URL Supabase réellement chargée côté client
  console.log('[Env] PUBLIC_SUPABASE_URL:', import.meta.env.PUBLIC_SUPABASE_URL);
</script>
  // Debug: vérifier l’URL Supabase réellement chargée côté client
  console.log('[Env] PUBLIC_SUPABASE_URL:', import.meta.env.PUBLIC_SUPABASE_URL);
</script>

